rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    // User profile images
    match /users/{userId}/profile/{fileName} {
      allow read: if isSignedIn();
      allow write: if isOwner(userId) && 
        request.resource.size < 5 * 1024 * 1024 && // Max 5MB
        request.resource.contentType.matches('image/.*');
    }
    
    // Voice messages in lists
    match /lists/{listId}/messages/{messageId}/{fileName} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && 
        request.resource.size < 10 * 1024 * 1024 && // Max 10MB
        request.resource.contentType.matches('audio/.*');
    }
    
    // List attachments (future feature)
    match /lists/{listId}/attachments/{fileName} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && 
        request.resource.size < 20 * 1024 * 1024; // Max 20MB
    }
    
    // Deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
