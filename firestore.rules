rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isOwner(userId);
      allow update, delete: if isAuthenticated() && isOwner(userId);
    }
    
    match /lists/{listId} {
      allow read: if isAuthenticated() && 
        (resource.data.ownerId == request.auth.uid || 
         request.auth.uid in resource.data.sharedWith);
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
        resource.data.ownerId == request.auth.uid;
    }
    
    match /lists/{listId}/items/{itemId} {
      allow read: if isAuthenticated() && 
        (get(/databases/$(database)/documents/lists/$(listId)).data.ownerId == request.auth.uid ||
         request.auth.uid in get(/databases/$(database)/documents/lists/$(listId)).data.sharedWith);
      allow write: if isAuthenticated() && 
        (get(/databases/$(database)/documents/lists/$(listId)).data.ownerId == request.auth.uid ||
         request.auth.uid in get(/databases/$(database)/documents/lists/$(listId)).data.sharedWith);
    }
    
    match /messages/{messageId} {
      allow read: if isAuthenticated() && 
        (resource.data.senderId == request.auth.uid || 
         resource.data.receiverId == request.auth.uid);
      allow create: if isAuthenticated() && 
        request.resource.data.senderId == request.auth.uid;
      allow update: if isAuthenticated() && 
        resource.data.receiverId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        (resource.data.senderId == request.auth.uid || 
         resource.data.receiverId == request.auth.uid);
    }
  }
}
